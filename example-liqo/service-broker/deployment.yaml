---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres  # Sets Deployment name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres
          ports:
            - containerPort: 5432  # Exposes container port
          envFrom:
            - configMapRef:
                name: postgres-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-broker
  labels:
    app: service-broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-broker
  template:
    metadata:
      labels:
        app: service-broker
    spec:
      initContainers:
      - name: init-cont
        image: busybox:1.31
        command: ['sh', '-c', 'echo -e "Checking for the availability of PostgresSQL Server deployment"; while ! nc -z postgres 5432; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";']
      containers:
      - args:
        - -logtostderr
        - -v
        - "0"
        # This may be either 'basic' (for username/password), or token (for bearer token)
        # If you change this, then you also need to update the authentication type defined
        # in clusterservicebroker.yaml
        - -authentication=advancedToken
        - -token=/var/run/secrets/service-broker/token
        - -username=/var/run/secrets/service-broker/username
        - -password=/var/run/secrets/service-broker/password
        - -tls-certificate=/var/run/secrets/service-broker/tls-certificate
        - -tls-private-key=/var/run/secrets/service-broker/tls-private-key
        name: service-broker
        image: andreacv98/service-broker:latest
        env:
        - name: NAMESPACE
          value: default
        volumeMounts:
        - mountPath: /var/run/secrets/service-broker
          name: secret-volume
          readOnly: true
        ports:
        - containerPort: 8443
        - containerPort: 8080
      serviceAccountName: service-broker
      volumes:
      - name: secret-volume
        secret:
          secretName: service-broker
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: postgresdb
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: psltest