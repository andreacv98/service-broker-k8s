# The main Broker configuration.  This defines what classes and plans a client
# can see, along with what can be configured.  Templates are bound to a plan and
# are rendered and created when a service instance/binding is created, then cleaned
# up when deleted.
apiVersion: servicebroker.couchbase.com/v1alpha1
kind: ServiceBrokerConfig
metadata:
  name: couchbase-service-broker
spec:
  # Catalog is simply verbatim what will be exposed on GET /v2/catalog
  catalog:
    services:
    - id: customDb-v1-001
      name: custom-database-v1
      description: Custom Database for academic purposes
      tags:
      - database
      bindable: true
      planUpdatable: false
      plans:
      - id: 8b0d4bb1-7b5a-4866-9f9b-2b7d92e7a8cd
        name: plan-customDb-v1-Liqo
        description: customDb on Liqo
        schemas:
          serviceInstance:
            create:
              parameters:
                $schema: "http://json-schema.org/draft-07/schema#"
                type: object
                required:
                  - secret-binding-name
                properties:
                  secret-binding-name:
                    description: "Credentials name"
                    type: string
                    pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            update:
              parameters:
                $schema: "http://json-schema.org/draft-07/schema#"
                type: object
                required:
                  - secret-binding-name
                properties:
                  secret-binding-name:
                    description: "Secret binding name"
                    type: string
                    pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          serviceBinding:
            create:
              parameters:
                $schema: "http://json-schema.org/draft-07/schema#"
                type: object
                required:
                  - user-name
                  - secret-binding-name
                  - binding-namespace
                properties:
                  root-password:
                    description: "Administrator password"
                    type: string
                  user-name:
                    description: "User name"
                    type: string
                  user-password:
                    description: "User password"
                    type: string
                  database-name:
                    description: "Database name"
                    type: string
                  port:
                    description: "Port"
                    type: integer
                  secret-binding-name:
                    description: "Secret binding name"
                    type: string
                    pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  binding-namespace:
                    description: "Namespace where the binding will be created"
                    type: string
  # Templates allow the end user to define anything they want to be created.
  # The parameters if specified define where the source is, either requesst
  # metadata or parameters.  Parameters allow defaults to be specified if
  # the parameter is not defined.  Parameters are applied to the resource one
  # or many times as required.
  templates:
  - name: database-deployment
    singleton: true
    template:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: '{{ registry "instance-id" }}'
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: '{{ registry "instance-id" }}'
        template:
          metadata:
            labels:
              app: '{{ registry "instance-id" }}'
          spec:
            containers:
            - name: '{{ registry "instance-id" }}'
              image: mysql:5.6
              env:
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: '{{ registry "secret-binding-name" }}'
                    key: MYSQL_ROOT_PASSWORD
              - name: MYSQL_USER
                valueFrom:
                  secretKeyRef:
                    name: '{{ registry "secret-binding-name" }}'
                    key: MYSQL_USER
              - name: MYSQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: '{{ registry "secret-binding-name" }}'
                    key: MYSQL_PASSWORD
              - name: MYSQL_DATABASE
                valueFrom:
                  secretKeyRef:
                    name: '{{ registry "secret-binding-name" }}'
                    key: MYSQL_DATABASE
              ports:
              - containerPort: 3306
                name: mysql
  - name: database-service
    template:
      apiVersion: v1
      kind: Service
      metadata:
        name: '{{ registry "instance-id" }}'
      spec:
        type: ClusterIP
        ports:
        - protocol: TCP
          port: '{{ registry "port" }}'
          targetPort: 3306
        selector:
          app: '{{ registry "instance-id" }}'
  - name: database-secret-binding
    template:
      apiVersion: v1
      kind: Secret
      metadata:
        name: '{{ registry "secret-binding-name" }}'
        annotations:
          synator/sync: 'yes'          
          synator/include-namespaces: '{{ printf "%s,%s" (registry "namespace") (registry "binding-namespace") }}'
      stringData:
        MYSQL_ROOT_PASSWORD: '{{ parameter "/root-password" | generatePassword 32 }}'
        MYSQL_USER: '{{ parameter "/user-name" | default "myuser" }}'
        MYSQL_PASSWORD: '{{ parameter "/user-password" | generatePassword 32 }}'
        MYSQL_DATABASE: '{{ parameter "/database-name" | default "mydb" }}'
        MYSQL_HOST: '{{ registry "host" }}'
        MYSQL_PORT: '{{ printf "%s" (registry "port") }}'
        MYSQL_HOST_PORT: '{{ printf "%s:%s" (registry "host") (registry "port") }}'
        
  # Bindings bind templates to service plans.  These allow the specification of
  # exactly what templates are created when a plan is instantiated or bound to.
  bindings:
  - name: plan-customDb-v1-Liqo
    service: custom-database-v1
    plan: plan-customDb-v1-Liqo
    registryScope: InstanceLocal
    serviceInstance:
      registry:
      - name: secret-binding-name
        value: '{{ parameter "/secret-binding-name" }}'
      steps:
      - name: database-cluster
        templates:
        - database-deployment
    serviceBinding:
      registry:
      - name: port
        value: '{{ parameter "/port" | default 3306 }}'
      - name: host
        value: '{{ printf "%s.%s" (registry "instance-id") (registry "namespace") }}'
      - name: binding-namespace
        value: '{{ parameter "/binding-namespace" }}'
      - name: secret-binding-name
        value: '{{ parameter "/secret-binding-name" }}'
      templates:
      - database-service
      - database-secret-binding